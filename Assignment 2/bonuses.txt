BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers

1. We used the configuration fields.
2. At every method that need to use a pre value.
3. We changed the values of the fields in the configuration file.

--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.

1. We did interrupt to the players threads and We did terminate to try players from the end of the players array to the beginning.
2. Player->terminate() and Dealer->terminate();
3. We created flags that check if the last thread has already been created or terminated and if so, we printed his id to check.
It's different from the log output because the log output writes when the thread start and it can be different from the order of the creation and termination of the threads.

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

We are not entitled to this bonus.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

We are not entitled to this bonus.
